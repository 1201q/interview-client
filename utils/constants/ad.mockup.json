[
  {
    "question_text": "AndroidManifest.xml에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "제네릭에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "MVVM ViewModel과 AAC ViewModel 차이점에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "안드로이드 앱의 생명주기에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "안드로이드의 4대 컴포넌트에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "Activity와 Fragment에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "복수의 Fragment 간 데이터 전달 방법을 설명 해주세요.",
    "role": "android"
  },
  {
    "question_text": "화면이 전환 되었을 때 Fragment가 어떻게 되는지 설명할 수 있나요?",
    "role": "android"
  },
  {
    "question_text": "Fragment로만 이루어지는 앱의 장점과 단점에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "Room과 SharedPreferences에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "List View와 Recycler View의 차이는?",
    "role": "android"
  },
  {
    "question_text": "ConstraintLayout의 장점과 RelativeLayout과 무엇이 다른지 차이를 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "AAC LiveData와 ViewModel 이 무엇인지 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "lateinit과 lazy 차이점은?",
    "role": "android"
  },
  {
    "question_text": "Context란 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "interface와 abstract class에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "클래스, 오브젝트(객체), 인스턴스에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "동시성과 병렬성에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "동기, 비동기를 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "여러개의 비동기를 동시에 처리해서 결과를 한꺼번에 보여주려면 어떻게 해야할까요?",
    "role": "android"
  },
  {
    "question_text": "블로킹, 논블로킹에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "프로세스와 스레드에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "교착 상태에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "Rxjava를 사용하면 좋은 점에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "반응형 프로그래밍이 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "선언형프로그래밍이 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "코루틴에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "Activity가 가로/세로로 전환되거나 메모리 부족 등으로 종료되었을 때 데이터를 유지하는 방법은?",
    "role": "android"
  },
  {
    "question_text": "라이브러리와 프레임워크의 차이에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "MVP Presenter와 MVVM ViewModel의 차이는 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "MVC, MVP, MVVM, MVI 각각을 비교해주세요.",
    "role": "android"
  },
  {
    "question_text": "Repository 패턴이란 무엇이고 장점은 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "Intent에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "Intent를 통해 데이터 전달하는 과정에서 클래스 객체를 바로 전달할 수 있나요? 전달하기 위해서는 어떤 처리가 필요한가요?",
    "role": "android"
  },
  {
    "question_text": "Activity 간 데이터 전달을 위해 Intent를 사용하는 이유가 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "xml에서 view가 그려지는 과정에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "List, Set, Map에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "HashMap과 HashSet은 어떨 때 사용하나요?",
    "role": "android"
  },
  {
    "question_text": "오버로딩과 오버라이딩에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "ConstraintLayout은 왜 사용하나요?",
    "role": "android"
  },
  {
    "question_text": "WorkManager가 무엇인지 소개해주실 수 있나요?",
    "role": "android"
  },
  {
    "question_text": "Thread, Looper, Handler에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "메인 스레드만 UI를 접근 가능한 이유에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "Message과 Runnable에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "Task에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "ViewHolder 패턴에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "View의 Pagination 구현 방법을 설명 해주세요.",
    "role": "android"
  },
  {
    "question_text": "인플레이션(inflation)이란 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "Thread간 통신하는 방법들에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "dp, sp의 사용처에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "TDD에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "BDD와 TDD의 차이를 설명할 수 있나요?",
    "role": "android"
  },
  {
    "question_text": "CI/ CD에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "SurfaceView와 TextureView를 각각 소개해주세요.",
    "role": "android"
  },
  {
    "question_text": "GC의 동작원리와 WeakedReference를 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "private 함수를 테스트한다면 어떻게 해야할까요?",
    "role": "android"
  },
  {
    "question_text": "안드로이드에서 Unit Test가 필요 한 이유는 무엇일까요?",
    "role": "android"
  },
  {
    "question_text": "단위테스트, 인수테스트, 통합테스트, UI테스트의 차이는 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "REST API와 Restful API에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "객체지향 프로그래밍에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "객체지향의 5원칙 SOLID(솔리드)에 대해 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "HTTTPS과 HTTP의 차이를 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "GET, POST, PUT, PATCH, DELETE에 대해 각각 설명하세요.",
    "role": "android"
  },
  {
    "question_text": "Parcel 과 Serializable의 차이는 무엇일까요?",
    "role": "android"
  },
  {
    "question_text": "쿠키, 세션, 캐시에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "액티비티가 다시 재생성되는 조건은요?",
    "role": "android"
  },
  {
    "question_text": "의존성 주입에 대해 설명해보세요. RxJava에서 flatMap과 switchMap의 차이가 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "Main 스레드와 Work 스레드에 대해 설명해보세요.",
    "role": "android"
  },
  {
    "question_text": "Java와 비교했을 때 Kotlin의 장점을 소개해주세요.",
    "role": "android"
  },
  {
    "question_text": "Kotlin에서 with, run 의 차이점은 무엇일까요?",
    "role": "android"
  },
  {
    "question_text": "Kotlin에서 run, let 의 차이점은 무엇일까요?",
    "role": "android"
  },
  {
    "question_text": "Kotlin에서 let, also 의 차이점은 무엇일까요?",
    "role": "android"
  },
  {
    "question_text": "Kotlin에서 Immutable 변수와 Mutable 변수를 쓰면 좋은점은 무엇일까요?",
    "role": "android"
  },
  {
    "question_text": "Exception과 Error, Throwable의 차이를 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "RxJava에서 Observable, Flowable 차이가 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "RxJava에서 Flowable은 어떻게 사용하는 것인가요?",
    "role": "android"
  },
  {
    "question_text": "RxJava에서 merge, concat, zip 차이를 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "RxJava에서 flatMap과 switchMap의 차이가 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "백그라운드에서 UI를 업데이트 하는 방법은? width, measured width의 차이가 무엇인가요?",
    "role": "android"
  },
  {
    "question_text": "클린아키텍처가 무엇인지 설명해주세요.",
    "role": "android"
  },
  {
    "question_text": "클린아키텍처에서 고수준, 저수준이 어떤 것인지 설명해 주실 수 있나요?",
    "role": "android"
  },
  {
    "question_text": "Bundle이 무엇인가요?",
    "role": "android"
  }
]
